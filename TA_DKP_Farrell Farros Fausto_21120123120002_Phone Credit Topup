from tkinter import *
from tkinter import messagebox
from tkinter import ttk

class PulsaApp:
    def __init__(self, root):
        self.root = root
        self.root.geometry("320x400")
        self.root.title("Pembelian Pulsa")
        self.root.resizable(width=0, height=0)

        self.root.configure(bg="#87CEEB")

        menu = Menu(root)
        self.root.config(menu=menu)

        view_menu = Menu(menu, tearoff=0)
        view_menu.add_command(label="Fullscreen", command=self.toggle_fullscreen)
        view_menu.add_command(label="Minimize", command=self.minimize_window)
        menu.add_cascade(label="View", menu=view_menu)

        self.label_phone = Label(root, text="Nomor HP:", font=("Arial", 10), bg="#87CEEB", fg="#ffffff")
        self.label_phone.place(x=30, y=20)

        self.phone_entry = Entry(root, width=20, font=("Arial", 10), bg="#ffffff", fg="#333", bd=2, relief="groove")
        self.phone_entry.place(x=150, y=20)

        self.label_network = Label(root, text="Pilih Jaringan:", font=("Arial", 10), bg="#87CEEB", fg="#ffffff")
        self.label_network.place(x=30, y=60)

        self.network = ttk.Combobox(root, width=15, font=("Arial", 10), state="readonly")
        self.network.place(x=150, y=60)
        self.network['values'] = ("Telkomsel", "Indosat", "XL", "Smartfren")
        self.network.bind("<<ComboboxSelected>>", self.show_price)

        self.label_price = Label(root, text="Pilih Harga:", font=("Arial", 10), bg="#87CEEB", fg="#ffffff")
        self.label_price.place(x=30, y=100)

        self.price = ttk.Combobox(root, width=15, font=("Arial", 10), state="readonly")
        self.price.place(x=150, y=100)

        self.button_pay = Button(root, text="Pay", command=self.pay, font=("Arial", 10), bg="#4CAF50", fg="#fff", bd=0, relief="flat", activebackground="#45a049")
        self.button_pay.place(x=140, y=140)

        self.text_box = Text(root, height=5, width=40, font=("Arial", 10), bg="#ffffff", fg="#333", bd=2, relief="groove")
        self.text_box.place(x=20, y=200)
        self.text_box.config(state=DISABLED)

        # Attributes
        self._selected_network = ""
        self._selected_price = 0
        self._phone_number = ""

    def show_price(self, event=None):
        self.selected_network = self.network.get()
        prices = []
        if self.selected_network == "Telkomsel":
            prices = [5000, 10000, 20000, 50000]
        elif self.selected_network == "Indosat":
            prices = [6000, 12000, 25000, 60000]
        elif self.selected_network == "XL":
            prices = [5500, 11000, 21000, 52000]
        elif self.selected_network == "Smartfren":
            prices = [7000, 13000, 24000, 55000]

        self.price['values'] = prices

    def pay(self):
        self.selected_network = self.network.get()
        self.selected_price = self.price.get()
        self.phone_number = self.phone_entry.get()

        if not self.selected_network or not self.selected_price or not self.phone_number:
            messagebox.showwarning("Warning", "Tolong isi semua kolom: jaringan, harga, dan nomor HP.")
            return

        if not self.phone_number.isdigit() or not (10 <= len(self.phone_number) <= 13):
            messagebox.showwarning("Warning", "Nomor HP harus berisi angka dan memiliki panjang antara 10 hingga 13 karakter.")
            return

        receipt_message = (
            f"Pembelian Pulsa Berhasil!\n"
            f"Nomor HP: {self.phone_number}\n"
            f"Jaringan: {self.selected_network}\n"
            f"Harga: {self.selected_price}\n"
        )
        items = [
            {"description": "Biaya Administrasi", "amount": 2000},
        ]
        
        for item in items:
            receipt_message += f"- {item['description']}: {item['amount']}\n"
            
        self.text_box.config(state=NORMAL)
        self.text_box.delete(1.0, END)
        self.text_box.insert(END, receipt_message)
        self.text_box.config(state=DISABLED)

    def toggle_fullscreen(self):
        self.root.attributes('-fullscreen', not self.root.attributes('-fullscreen'))

    def minimize_window(self):
        self.root.iconify()

    def selected_network(self):
        return self._selected_network

    def selected_network(self, value):
        self._selected_network = value

    def selected_price(self):
        return self._selected_price

    def selected_price(self, value):
        self._selected_price = value

    def phone_number(self):
        return self._phone_number

    def phone_number(self, value):
        self._phone_number = value

if __name__ == "__main__":
    root = Tk()
    app = PulsaApp(root)
    root.mainloop()
